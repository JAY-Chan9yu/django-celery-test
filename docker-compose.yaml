version: '3.1'
networks:
  app-tier:
    driver: bridge

services:
  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: celery-test-rabbit
    hostname: rabbit1
    # restart: always
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
      - RABBITMQ_DEFAULT_VHOST=default
    networks:
      - app-tier

  api:
    build: ./
    container_name: celery-test-api
    volumes:
      - ./:/usr/src/app
    tty: true
    stdin_open: true
    ports:
      - "8000:8000"
    command: # https://binux.tistory.com/76
      - sh
      - -c
      - |
        pip install -r requirements.txt
        ./manage.py runserver 0.0.0.0:8000
    depends_on:
      - rabbitmq
    networks:
      - app-tier

  celery:
    build: ./
    container_name: celery-worker-rabbitmq
    volumes:
      - ./:/usr/src/app
      - ./celeryd:/etc/default/celeryd
    privileged: true
    tty: true
    stdin_open: true
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt
        sudo ./init_script.sh
        sudo /etc/init.d/celeryd start
        /bin/bash
    networks:
      - app-tier
    depends_on:
      - rabbitmq

  celery_sqs:
    build: ./
    container_name: celery-worker-sqs
    volumes:
      - ./:/usr/src/app
      - ./celeryd_sqs:/etc/default/celeryd
    privileged: true
    tty: true
    stdin_open: true
    command:
      - sh
      - -c
      - |
        pip install -r requirements.txt
        sudo ./init_script.sh
        sudo /etc/init.d/celeryd start
        /bin/bash
    networks:
      - app-tier
